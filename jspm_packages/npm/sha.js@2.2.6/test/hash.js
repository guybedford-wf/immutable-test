/* */
!function(t){function e(t,e,r){t.equal(e.length,r.length);for(var n=0;n<e.length;n++)t.equal(e[n],r[n])}function r(r,n){s(r,function(r){var s=new u(16,8),o=new t(20),a=2,h=n.buffers.slice();s._update=function(t){var n=h.shift();if(console.log("---block---"),console.log(i(t),t.length),console.log("---e---"),console.log(i(n),t.length),console.log(t),e(r,t,n),0>a)throw new Error("expecting only 2 calls to _update");return o},n.strings.forEach(function(t){s.update(t,"ascii")}),e(r,s.digest(),o),r.end()})}var n,i=require("../hexpp").defaults({bigendian:!1}),s=require("tape"),t=require("buffer/index").Buffer,u=require("../hash")(t),o="0A1B2C3D4E5F6G7H",a={strings:["0A1B2C3D4E5F6G7H"],buffers:[n=new t([48,65,49,66,50,67,51,68,52,69,53,70,54,71,55,72]),new t([128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128])]},h={strings:[""],buffers:[new t([128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])]},c={strings:["abcd","efhijk","lmnopq"],buffers:[new t("abcdefhijklmnopq","ascii"),new t([128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128])]},f={strings:[o+o],buffers:[n,n,new t([128,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0])]};r("Hash#update 1 in 1",a),r("empty Hash#update",h),r("Hash#update 1 in 3",c),r("Hash#update 2 in 1",f)}(require("github:jspm/nodelibs@0.0.5/buffer").Buffer);
//# sourceMappingURL=hash.js.map